apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: func-deploy
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: Kubernetes
    tekton.dev/tags: CLI, kubectl
    tekton.dev/displayName: "kubernetes actions"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This task is the generic kubectl CLI task which can be used
    to run all kinds of k8s commands
  workspaces:
    - name: source
      description: The workspace containing the function project
    - name: manifest-dir
      optional: true
    - name: kubeconfig-dir
      optional: true
  params:
    - name: name
      description: Name of the resource to be created
      default: ""
    - name: namespace
      description: Namespace of the resource to be created
      default: ""
    - name: image
      description: Container image to be deployed
      default: ""
  steps:
    - name: kubectl
      image: gcr.io/cloud-builders/kubectl@sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753
      script: |
        #!/usr/bin/env bash

        [[ "$(workspaces.manifest-dir.bound)" == "true" ]] && \
        cd $(workspaces.manifest-dir.path)

        [[ "$(workspaces.kubeconfig-dir.bound)" == "true" ]] && \
        [[ -f $(workspaces.kubeconfig-dir.path)/kubeconfig ]] && \
        export KUBECONFIG=$(workspaces.kubeconfig-dir.path)/kubeconfig

        cat <<EOF | kubectl apply -f -
        apiVersion: serving.knative.dev/v1
        kind: Service
        metadata:
          name: $(params.name)
          namespace: $(params.namespace)
        spec:
          template:
            spec:
              imagePullSecrets:
              - name: artifact-registry-secret
              containers:
                - image: $(params.image)
        EOF